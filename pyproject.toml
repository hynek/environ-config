# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme>=22.8.0"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
packages = ["src/environ"]


[project]
dynamic = ["readme", "version"]
name = "environ-config"
description = "Boilerplate-free configuration with env variables."
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.7"
license = "Apache-2.0"
keywords = ["app", "config", "env", "cfg"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["attrs>=17.4.0", "importlib_metadata; python_version<'3.8'"]

[project.optional-dependencies]
tests = ["pytest", "coverage[toml]", "moto"]
aws = ["boto3"]
docs = [
    "environ-config[aws]",
    "furo",
    "myst-parser",
    "sphinx-notfound-page",
    "sphinx",
]
dev = ["environ-config[tests,docs]"]

[project.urls]
Documentation = "https://environ-config.readthedocs.io/"
Changelog = "https://environ-config.rtfd.io/en/stable/changelog.html"
"Bug Tracker" = "https://github.com/hynek/environ-config/issues"
"Source Code" = "https://github.com/hynek/environ-config"
Funding = "https://github.com/sponsors/hynek"
Tidelift = "https://tidelift.com/subscription/pkg/pypi-environ-config?utm_source=pypi-environ-config&utm_medium=pypi"


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
testpaths = "tests"
filterwarnings = ["once::Warning"]


[tool.coverage.run]
parallel = true
branch = true
source = ["environ"]

[tool.coverage.paths]
source = ["src", ".nox/tests*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    # a more strict default pragma
    "\\# pragma: no cover\\b",

    # allow defensive code
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*return NotImplemented\\b",
    "^\\s*raise$",

    # typing-related code
    "^if (False|TYPE_CHECKING):",
    ": \\.\\.\\.(\\s*#.*)?$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]


[tool.black]
line-length = 79


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = '''


## Release Information

'''

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """
 ---

 [**Full Changelog**](https://www.structlog.org/en/stable/changelog.html)
 """


[tool.ruff]
src = ["src", "tests", "noxfile.py"]
select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "DTZ", # flake8-datetimez
    "I",   # isort
    "PGH", # pygrep-hooks
    "PLC", # Pylint
    "PIE", # flake8-pie
    "RUF", # ruff
]
ignore = [
    "E501",   # leave line-length enforcement to Black
    "RUF001", # leave my smart characters alone
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "B018",    # useless statements can be actually useful
    "PLC1901", # empty strings are falsey, but are less specific in tests
    "S101",    # assert
    "S104",    # Possible binding to all interfaces
    "SIM300",  # Yoda rocks in tests
]

[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2
