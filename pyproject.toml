# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme>=22.8.0"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
packages = ["src/environ"]


[project]
dynamic = ["readme", "version"]
name = "environ-config"
description = "Boilerplate-free configuration with env variables."
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.8"
license = "Apache-2.0"
keywords = ["app", "config", "env", "cfg"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = ["attrs>=17.4.0", "importlib_metadata; python_version<'3.8'"]

[project.optional-dependencies]
tests = ["pytest", "moto"]
cov = ["environ-config[tests]", "coverage[toml]"]
aws = ["boto3"]
docs = [
    "environ-config[aws]",
    "furo",
    "myst-parser",
    "sphinx-notfound-page",
    "sphinx",
]
dev = ["environ-config[tests]", "nox", "pre-commit"]

[project.urls]
Documentation = "https://environ-config.readthedocs.io/"
Changelog = "https://environ-config.rtfd.io/en/stable/changelog.html"
GitHub = "https://github.com/hynek/environ-config/"
Funding = "https://github.com/sponsors/hynek"
Mastodon = "https://mastodon.social/@hynek"
Twitter = "https://twitter.com/hynek"
Tidelift = "https://tidelift.com/subscription/pkg/pypi-environ-config?utm_source=pypi-environ-config&utm_medium=pypi"


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.uv]
reinstall-package = ["environ-config"]


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
testpaths = "tests"
filterwarnings = [
    "once::Warning",
    # Not our warnings; can't do anything about them.
    'ignore:datetime.datetime.utc(fromtimestamp|now).*:DeprecationWarning:',
]


[tool.coverage.run]
parallel = true
branch = true
source = ["environ"]

[tool.coverage.paths]
source = ["src", ".nox/tests*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_also = [
    ': \.\.\.$', # Function/method stubs.
]


[tool.interrogate]
omit-covered-files = true
verbose = 2
fail-under = 100
whitelist-regex = ["test_.*"]


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.typing.*"
ignore_errors = false


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = '''


## Release Information

'''

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """
 ---

 [Full Changelog â†’](https://environ-config.readthedocs.io/en/stable/changelog.html)
 """


[tool.ruff]
src = ["src", "tests", "noxfile.py"]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "A001",    # shadowing is fine
    "A002",    # shadowing is fine
    "ANN",     # Mypy is better at this
    "ARG001",  # unused arguments are normal when implementing interfaces
    "ARG002",  # unused arguments are normal when implementing interfaces
    "COM",     # Formatter takes care of our commas
    "D",       # We prefer our own docstring style.
    "E501",    # leave line-length enforcement to formatter
    "FBT",     # bools are fine
    "INP001",  # sometimes we want Python files outside of packages
    "ISC001",  # conflicts with formatter
    "PLR0913", # sometimes 6 arguments are ok
    "RUF001",  # leave my smart characters alone
    "SLF001",  # private members are accessed by friendly functions
    "TCH",     # TYPE_CHECKING blocks break autodocs
    "TID252",  # relative imports are always awesome
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ARG005",  # we need stub lambdas
    "B018",    # useless statements can be actually useful
    "EM101",   # no need for exception msg hygiene in tests
    "PLC1901", # empty strings are falsey, but are less specific in tests
    "PT005",   # we always add underscores and explicit name
    "PT011",   # broad is fine
    "PLR2004", # magic constants are fine in tests
    "S101",    # assert
    "S104",    # Possible binding to all interfaces
    "SIM300",  # Yoda rocks in asserts
    "TRY002",  # stock exceptions are fine in tests
]
"noxfile.py" = [
    "ERA001", # Cog uses commented out code
]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2
